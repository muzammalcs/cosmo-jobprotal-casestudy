version: '3.8'

services:
  # Laravel Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: job-portal-backend
    container_name: job-portal-backend
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: backend
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
      - ./backend/vendor:/var/www/vendor
    ports:
      - "9000:9000"
    networks:
      - app-network
    depends_on:
      - db

  # React.js Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: job-portal-frontend
    container_name: job-portal-frontend
    restart: unless-stopped
    tty: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3000:3000"
    networks:
      - app-network

  # Database Service
  db:
    image: mysql:5.7.24
    container_name: job-portal-db
    restart: unless-stopped
    environment:
      # this command is required to connect api from other container to mysql
      command: --default-authentication-plugin=mysql_native_password
      MYSQL_DATABASE: job-portal-db
      MYSQL_USER: homestead
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
    volumes:
      - job-db-data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - app-network

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin:apache
    restart: always
    depends_on:
      - db
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: secret
    ports:
      - 8000:80
    networks:
      - app-network

volumes:
  job-db-data:

networks:
  app-network:
  driver: